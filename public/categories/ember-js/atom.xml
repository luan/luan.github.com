<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ember.js | Luan Santos Blog]]></title>
  <link href="http://blog.luansantos.com/categories/ember-js/atom.xml" rel="self"/>
  <link href="http://blog.luansantos.com/"/>
  <updated>2012-03-17T11:03:06-03:00</updated>
  <id>http://blog.luansantos.com/</id>
  <author>
    <name><![CDATA[Luan Santos]]></name>
    <email><![CDATA[luan@luansantos.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Facebook JS SDK with Ember.js]]></title>
    <link href="http://blog.luansantos.com/2012/03/06/using-facebook-js-sdk-with-emberjs/"/>
    <updated>2012-03-06T10:25:00-03:00</updated>
    <id>http://blog.luansantos.com/2012/03/06/using-facebook-js-sdk-with-emberjs</id>
    <content type="html"><![CDATA[<p>This is my first blog post and it will be as simple as that.</p>

<h3>Using the ember-facebook library</h3>

<p>I wrote a (<em>really</em>) simples addon for <a href="http://www.emberjs.com">Ember.js</a> to automatically load the <a href="https://developers.facebook.com/docs/reference/javascript/">facebook javascript sdk</a>, it's called <a href="http://www.github.com/luan/ember-facebook">ember-facebook</a> as you'd expect.</p>

<p>To use it you just have to download the compiled js file from the downloads page on the github repository. The library is written in <a href="http://coffeescript.org">CoffeeScript</a> and I do <a href="http://arcturo.github.com/library/coffeescript/">love CoffeeScript</a>.</p>

<p><a href="https://github.com/downloads/luan/ember-facebook/ember-facebook.js">Download ember-facebook.js</a></p>

<p>Once you done it include it right after the actual Ember.js file, and before your application one, do it as you are used to.</p>

<p>Right now you can use it like this, on your application creation include the Facebook Mixin:</p>

<p><code>coffeescript Application Configuration
App = Em.Application.create(Em.Facebook)
App.set 'appId', 'YourAppId'
</code></p>

<!-- more -->


<p>And it will graciously load the Facebook JS SDK for you, you don't have to do anything else. Now you are able to use the <code>FB</code> object to call Facebook's API, and we assigned a FBUser to your App to reffer to the logged in user.
If you want a login button you can do something like this:</p>

<p>```html Simple login/logout buttons
{{#if App.FBUser}}
  <div></p>

<pre><code>&lt;img {{bindAttr src="App.FBUser.picture" alt="App.FBUser.name"}} /&gt;
{{App.FBUser.name}}
&lt;a href="#" {{action "logout" target="FB"}}&gt;Logout&lt;/a&gt;
</code></pre>

<p>  </div>
{{else}}
  {{#view Em.FacebookView type="login-button" data-size="xlarge"</p>

<pre><code>                      data-scope="email, offline_access"}}
Connect
</code></pre>

<p>  {{/view}}
{{/if}}
```</p>

<p>Note that we are checking for the existance of App.FBUser and then displaying the user names and picture together with a logout link if the user is present OR we show a custom view called FacebookView that basically creates a view of the Facebook SDK, you can check more on their documentation.</p>

<p>Basically we create a button with the xlarge size and ask for the scopes "email" and "offline_access" with the content "Connect".</p>

<p>You can customize it however. You could either create a link to that, just bindint the action "login" to the target "FB" (as we did with logout).</p>

<h3>Creating the ember-facebook library</h3>

<p>The <a href="https://github.com/luan/ember-facebook/blob/master/src/ember-facebook.coffee">sources</a> for the library are really really simple. I basically observes the "appId" attribute and when that changes it loads the Facebook JS SDK for that app.</p>

<p>Whenever the user changes (login, logout, app authorization, etc) the method <code>updateFBUser</code> is called, updating the App.FBUser object on your application. You can do whatever you want with this binding, observe it, put it in the DOM, whatever.</p>

<p>We also have a App.FBloading binding which is a boolean that basically tells that we are waiting a facebook response.</p>

<p>You might want to show something based on this:</p>

<p><code>html Fancy Loading
{{#if App.FBloading}}
  &lt;div class="my-fancy-loading"&gt;Waiting for Facebook&lt;/div&gt;
{{/if}}
</code></p>

<h3>That's all folks</h3>

<p>I hope you like it, as it being my first post it might look retarded, but I hope it was helpful for someone.</p>

<p>See ya!</p>
]]></content>
  </entry>
  
</feed>
